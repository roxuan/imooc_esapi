<?php
/**
 * Created by PhpStorm.
 * User: Siam
 * Date: 2019/12/5
 * Time: 17:22
 */

namespace EasySwoole\ORM\Tests;


use EasySwoole\Mysqli\Exception\Exception;
use EasySwoole\ORM\Db\Config;
use EasySwoole\ORM\Db\Connection;
use EasySwoole\ORM\DbManager;
use PHPUnit\Framework\TestCase;

class SaveAllTest extends TestCase
{

    /**
     * @var $connection Connection
     */
    protected $connection;
    protected $tableName = 'user_test_list';
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $config = new Config(MYSQL_CONFIG);
        $this->connection = new Connection($config);
        DbManager::getInstance()->addConnection($this->connection);
        $connection = DbManager::getInstance()->getConnection();
        $this->assertTrue($connection === $this->connection);
    }

    public function testSaveAll()
    {
        $data = [
            [
                'name' => 'siam,你好',
                'age'  => 21,
                'addTime' => "2019-11-22 20:19:16",
                'state' => 1
            ],
            [
                'name' => 'siam,你好',
                'age'  => 21,
                'addTime' => "2019-11-22 20:19:16",
                'state' => 2
            ]
        ];

        $res = TestUserListModel::create()->saveAll($data);
        $this->assertEquals(count($res), 2);
        $this->assertIsInt($res[1]['id']);

        return [
            $res[0]['id'],
            $res[1]['id'],
        ];
    }

    /**
     * @throws \EasySwoole\Mysqli\Exception\Exception
     * @throws \EasySwoole\ORM\Exception\Exception
     * @throws \Throwable
     * @depends testSaveAll
     */
    public function testUpdateAll($ids)
    {
        $data = [
            [
                'id'   => $ids[0],
                'name' => 'siam,你好',
                'age'  => 21,
                'addTime' => "error",
                'state' => 127,
            ],
            [
                'id'   => $ids[1],
                'name' => 'siam,你好',
                'age'  => 21,
                'addTime' => "2019-11-22 20:19:16",
                'state' => 127
            ]
        ];

        $res = TestUserListModel::create()->saveAll($data);

        $this->assertEquals(count($res), 2);
        $this->assertEquals($res[0]['id'], $ids[0]);
        $this->assertEquals($res[0]['state'], 127);
        $this->assertIsInt($res[1]['id']);
    }

    /**
     * @depends testSaveAll
     */
    public function testSaveAllNotReplace($ids)
    {
        $data = [
            [
                'id'   => $ids[0],
                'name' => 'siam,你好',
                'age'  => 21,
                'addTime' => "error",
                'state' => 127,
            ],
            [
                'id'   => $ids[1],
                'name' => 'siam,你好',
                'age'  => 21,
                'addTime' => "2019-11-22 20:19:16",
                'state' => 127
            ]
        ];

        try {
            $res = TestUserListModel::create()->saveAll($data, FALSE);
        } catch (Exception $e) {
        } catch (\EasySwoole\ORM\Exception\Exception $e) {
            $this->assertEquals($e->getMessage(), "SQLSTATE[23000] [1062] Duplicate entry '{$ids[0]}' for key 'PRIMARY'");
        } catch (\Throwable $e) {
        }
    }


    public function testDeleteAll()
    {
        $res = TestUserListModel::create()->destroy(null, true);
        $this->assertIsInt($res);
    }
}